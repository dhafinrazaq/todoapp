[{"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/index.tsx":"1","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/App.tsx":"2","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reportWebVitals.js":"3","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoList.tsx":"4","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoForm.tsx":"5","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/todos.ts":"6","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TagsBar.tsx":"7","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/redux.ts":"8","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Auth/RegisterForm.tsx":"9","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Auth/LoginForm.tsx":"10","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/users.ts":"11","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Home/AppNavbar.tsx":"12","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reducers/todoReducers.ts":"13","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/types.ts":"14","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reducers/index.ts":"15","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reducers/authReducers.ts":"16"},{"size":646,"mtime":1610869029495,"results":"17","hashOfConfig":"18"},{"size":1626,"mtime":1610898334841,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610870029878,"results":"20","hashOfConfig":"18"},{"size":2067,"mtime":1610895094652,"results":"21","hashOfConfig":"18"},{"size":1495,"mtime":1610891448462,"results":"22","hashOfConfig":"18"},{"size":2704,"mtime":1610894953632,"results":"23","hashOfConfig":"18"},{"size":1056,"mtime":1610895124039,"results":"24","hashOfConfig":"18"},{"size":509,"mtime":1610894602190,"results":"25","hashOfConfig":"18"},{"size":1855,"mtime":1610894722553,"results":"26","hashOfConfig":"18"},{"size":1448,"mtime":1610896019668,"results":"27","hashOfConfig":"18"},{"size":1715,"mtime":1610897460063,"results":"28","hashOfConfig":"18"},{"size":1417,"mtime":1610893515865,"results":"29","hashOfConfig":"18"},{"size":1244,"mtime":1610895158295,"results":"30","hashOfConfig":"18"},{"size":335,"mtime":1610895582627,"results":"31","hashOfConfig":"18"},{"size":207,"mtime":1610896507801,"results":"32","hashOfConfig":"18"},{"size":691,"mtime":1610895572681,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ek44ry",{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/index.tsx",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/App.tsx",["72","73","74"],"import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport React, { Component, useEffect } from \"react\";\nimport { Container } from \"reactstrap\";\nimport TodoList from \"./components/Todo/TodoList\";\nimport RegisterForm from \"./components/Auth/RegisterForm\";\nimport LoginForm from \"./components/Auth/LoginForm\";\nimport AppNavbar from \"./components/Home/AppNavbar\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {IState} from \"./types/interfaces\"\nimport * as actions from \"./actions/users\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isAuth: boolean = localStorage.token !== null && localStorage.token !== \"\";\n\n  useEffect(() => {\n    console.log(\"SERVER_EVENT: auth-ing\");\n    dispatch(actions.auth());\n  }, [dispatch]);\n\n  \n  return (\n    <Router>\n      <AppNavbar></AppNavbar>\n      <Container>\n      <Route\n        exact\n        path=\"/login\"\n        render={(props) => (\n          <React.Fragment>\n            <LoginForm></LoginForm>\n          </React.Fragment>\n        )}\n      />\n      <Route\n        exact\n        path=\"/register\"\n        render={(props) => (\n          <React.Fragment>\n            <RegisterForm></RegisterForm>\n          </React.Fragment>\n        )}\n      />\n      \n        <Route\n          exact\n          path=\"/\"\n          render={(props) => isAuth ? (\n              <TodoList></TodoList>\n              ) : <Redirect to={{ pathname: '/login', state: { from: props.location } }} /> \n          }\n        /> \n        \n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reportWebVitals.js",[],["75","76"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoList.tsx",["77","78"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Row, Col } from \"reactstrap\";\nimport TodoForm from \"./TodoForm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./style.css\";\nimport TagsBar from \"./TagsBar\";\nimport * as actions from \"../../actions/todos\";\nimport {ITodo, ITag, IState} from \"../../types/interfaces\"\n\nconst updateTodo = (todo: ITodo) => {\n  const updatedTodo = {\n    ...todo,\n    isCompleted: !todo.isCompleted,\n  };\n\n  return updatedTodo;\n};\n\nexport default function TodoList() {\n  const dispatch = useDispatch();\n  const todos: ITodo[] = useSelector((state: IState) => state.todo.todos);\n  const tagName: string = useSelector((state: IState) => state.todo.tag);\n\n  const handleCheck = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, todo: ITodo) => {\n    e.preventDefault();\n    const updatedTodo = updateTodo(todo);\n    dispatch(actions.markTodo(updatedTodo));\n  };\n\n  const handleDelete = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, todo: ITodo) => {\n    e.preventDefault();\n    dispatch(actions.deleteTodo(todo));\n  };\n\n  useEffect(() => {\n    console.log(\"SERVER_EVENT: todo list changed\");\n    dispatch(actions.getTodos());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Row>\n        <Col md={2}>\n          <TagsBar></TagsBar>\n        </Col>\n        <Col md={9}>\n          <TodoForm></TodoForm>\n          {tagName}\n          <ol>\n            {\n            todos.map((todo: ITodo) => (\n              <li>\n                <Button\n                  color=\"primary\"\n                  size=\"sm\"\n                  onClick={(e) => handleCheck(e, todo)}\n                ></Button>\n                <Button\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={(e) => handleDelete(e, todo)}\n                ></Button>\n                <span className={todo.isCompleted ? \"completed-todo\" : \"\"}>\n                  {\" \"}\n                  {todo.name}\n                </span>\n              </li>\n            ))}\n          </ol>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoForm.tsx",["79","80","81","82"],"import React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {ITodo, ITag, IState} from \"../../types/interfaces\"\nimport * as actions from \"../../actions/todos\";\n\nexport default function TodoForm() {\n  const [name, setName] = useState(\"\");\n  const [tagList, setTagList] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const newTodo = {\n      name: name,\n      isCompleted: false,\n      tag_list: tagList,\n    };\n\n    dispatch(actions.addTodo(newTodo));\n  };\n\n  return (\n    <div>\n      <Form onSubmit={(e: React.FormEvent<HTMLFormElement>) => handleSubmit(e)}>\n        <FormGroup>\n          <Input\n            required\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Todo name\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setName(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            required\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Tags list\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setTagList(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <Button color=\"primary\" style={{ marginTop: \"2rem\" }} block>\n          Add todo\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/todos.ts",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TagsBar.tsx",["83"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/redux.ts",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Auth/RegisterForm.tsx",["84","85"],"import React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {IUser} from \"../../types/interfaces\"\nimport * as actions from \"../../actions/users\";\n\nexport default function RegisterForm() {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const newUser = {\n      username: username,\n      email: email,\n      password: password,\n    };\n\n    dispatch(actions.addUser(newUser));\n  };\n\n  return (\n    <div>\n      <Form onSubmit={(e: React.FormEvent<HTMLFormElement>) => handleSubmit(e)}>\n        <FormGroup>\n          <Input\n            required\n            type=\"text\"\n            name=\"username\"\n            id=\"username\"\n            placeholder=\"username\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setUsername(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            required\n            type=\"text\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"email\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}\n          ></Input>\n        </FormGroup>\n\n        <FormGroup>\n          <Input\n            required\n            type=\"text\"\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <Button color=\"primary\" style={{ marginTop: \"2rem\" }} block>\n          Register\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Auth/LoginForm.tsx",["86"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/users.ts",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Home/AppNavbar.tsx",["87","88","89","90","91"],"import React, { useState } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText\n} from 'reactstrap';\nimport \"./style.css\"\nimport * as actions from \"../../actions/users\"\nimport { useDispatch } from 'react-redux';\n\n\n\nexport default function AppNavbar() {\n  const [isOpen, setIsOpen] = useState(false);\n  const token = localStorage.token;\n  const dispatch = useDispatch();\n\n  const NavItems = (\n    <React.Fragment>\n    {(token === null || token === \"\" ) ? \n        <React.Fragment>\n          <NavItem>\n            <NavLink href=\"/login/\">Login</NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink href=\"/register/\">Register</NavLink>\n          </NavItem>\n        </React.Fragment>\n      :\n        <NavItem>\n          <NavLink href=\"/\" onClick={e => dispatch(actions.logout())}>Logout</NavLink>\n        </NavItem>\n    }\n   </React.Fragment>)\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div>\n      <Navbar className=\"navbar\" color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Todo app</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            {NavItems}\n            \n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n}","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reducers/todoReducers.ts",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/types.ts",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reducers/index.ts",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reducers/authReducers.ts",[],{"ruleId":"92","severity":1,"message":"93","line":4,"column":17,"nodeType":"94","messageId":"95","endLine":4,"endColumn":26},{"ruleId":"92","severity":1,"message":"96","line":10,"column":10,"nodeType":"94","messageId":"95","endLine":10,"endColumn":21},{"ruleId":"92","severity":1,"message":"97","line":11,"column":9,"nodeType":"94","messageId":"95","endLine":11,"endColumn":15},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"92","severity":1,"message":"102","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"103","line":8,"column":16,"nodeType":"94","messageId":"95","endLine":8,"endColumn":20},{"ruleId":"92","severity":1,"message":"96","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":21},{"ruleId":"92","severity":1,"message":"104","line":4,"column":9,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"103","line":4,"column":16,"nodeType":"94","messageId":"95","endLine":4,"endColumn":20},{"ruleId":"92","severity":1,"message":"97","line":4,"column":22,"nodeType":"94","messageId":"95","endLine":4,"endColumn":28},{"ruleId":"92","severity":1,"message":"102","line":1,"column":17,"nodeType":"94","messageId":"95","endLine":1,"endColumn":25},{"ruleId":"92","severity":1,"message":"96","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":21},{"ruleId":"92","severity":1,"message":"105","line":4,"column":9,"nodeType":"94","messageId":"95","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"96","line":3,"column":10,"nodeType":"94","messageId":"95","endLine":3,"endColumn":21},{"ruleId":"92","severity":1,"message":"106","line":10,"column":3,"nodeType":"94","messageId":"95","endLine":10,"endColumn":23},{"ruleId":"92","severity":1,"message":"107","line":11,"column":3,"nodeType":"94","messageId":"95","endLine":11,"endColumn":17},{"ruleId":"92","severity":1,"message":"108","line":12,"column":3,"nodeType":"94","messageId":"95","endLine":12,"endColumn":15},{"ruleId":"92","severity":1,"message":"109","line":13,"column":3,"nodeType":"94","messageId":"95","endLine":13,"endColumn":15},{"ruleId":"92","severity":1,"message":"110","line":14,"column":3,"nodeType":"94","messageId":"95","endLine":14,"endColumn":13},"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'IState' is defined but never used.","no-native-reassign",["111"],"no-negated-in-lhs",["112"],"'useState' is defined but never used.","'ITag' is defined but never used.","'ITodo' is defined but never used.","'IUser' is defined but never used.","'UncontrolledDropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'NavbarText' is defined but never used.","no-global-assign","no-unsafe-negation"]