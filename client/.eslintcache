[{"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/App.js":"1","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoList.js":"2","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/Todo.js":"3","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoForm.js":"4","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reportWebVitals.js":"5","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/index.js":"6","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/redux.js":"7","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TagsBar.js":"8","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/todos.js":"9"},{"size":902,"mtime":1610784958694,"results":"10","hashOfConfig":"11"},{"size":1935,"mtime":1610791198498,"results":"12","hashOfConfig":"11"},{"size":380,"mtime":1610026403080,"results":"13","hashOfConfig":"11"},{"size":1714,"mtime":1610782817564,"results":"14","hashOfConfig":"11"},{"size":362,"mtime":1610018067904,"results":"15","hashOfConfig":"11"},{"size":646,"mtime":1610463468718,"results":"16","hashOfConfig":"11"},{"size":1375,"mtime":1610791710024,"results":"17","hashOfConfig":"11"},{"size":930,"mtime":1610790369951,"results":"18","hashOfConfig":"11"},{"size":340,"mtime":1610791418872,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1xow1qf",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/App.js",["44","45"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport TodoList from \"./components/Todo/TodoList\";\nimport Todo from \"./components/Todo/Todo\";\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n        <Route\n          exact\n          path=\"/\"\n          render={(props) => (\n            <React.Fragment>\n              <TodoList></TodoList>\n            </React.Fragment>\n          )}\n        />\n        <Route\n          exact\n          path=\"/todos/:todoId\"\n          render={(props) => (\n            <React.Fragment>\n              <Todo todoId={props.match.params.todoId}></Todo>\n            </React.Fragment>\n          )}\n        />\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n",["46","47"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoList.js",["48"],"import React, { useState, useEffect } from \"react\";\nimport { Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport TodoForm from \"./TodoForm\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ACTIONS } from \"../../redux\";\nimport qs from \"qs\";\nimport \"./style.css\";\nimport TagsBar from \"./TagsBar\";\nimport { getTodos } from \"../../actions/todos\";\n\nfunction useMarkDispatcher() {\n  const dispatch = useDispatch();\n\n  return (updatedTodo) => {\n    console.log(updatedTodo);\n    axios\n      .put(\n        `/api/v1/todos/${updatedTodo.id}`,\n        qs.stringify({ todo: updatedTodo })\n      )\n      .then((res) => {\n        dispatch({\n          type: ACTIONS.UPDATE_TODO,\n          payload: {\n            todo: res.data,\n          },\n        });\n        console.log(\"success\");\n      })\n      .catch((error) => {\n        console.log(\"error\");\n      });\n  };\n}\n\nconst updateTodo = (todo) => {\n  const updatedTodo = {\n    ...todo,\n    isCompleted: !todo.isCompleted,\n  };\n\n  return updatedTodo;\n};\n\nexport default function TodoList() {\n  const dispatch = useDispatch();\n  const todos = useSelector((state) => state.todos);\n  const markDispatcher = useMarkDispatcher();\n\n  useEffect(() => {\n    console.log(\"SERVER_EVENT: todo list changed\");\n    dispatch(getTodos());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <TagsBar></TagsBar>\n      <TodoForm></TodoForm>\n      <ol>\n        Uncategorized\n        {todos.map((todo) => (\n          <li>\n            <Button\n              color=\"primary\"\n              size=\"sm\"\n              onClick={(e) => {\n                e.preventDefault();\n                const updatedTodo = updateTodo(todo);\n                markDispatcher(updatedTodo);\n              }}\n            ></Button>\n            <span className={todo.isCompleted ? \"completed-todo\" : \"\"}>\n              {\" \"}\n              {todo.name}\n            </span>\n          </li>\n        ))}\n      </ol>\n    </div>\n  );\n}\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/Todo.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TodoForm.js",["49"],"import React, { useState } from \"react\";\nimport { Button, Form, FormGroup, Input } from \"reactstrap\";\nimport axios from \"axios\";\nimport qs from \"qs\";\nimport { ACTIONS } from \"../../redux\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function TodoForm() {\n  const [name, setName] = useState(\"\");\n  const [tagList, setTagList] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const addTodo = (newTodo) => {\n    axios\n      .post(`/api/v1/todos`, qs.stringify({ todo: newTodo }))\n      .then((res) => {\n        console.log(res.data);\n        dispatch({\n          type: ACTIONS.ADD_TODO,\n          payload: {\n            todo: res.data,\n          },\n        });\n        console.log(\"success\");\n      })\n      .catch((error) => {\n        console.log(\"error\");\n      });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newTodo = {\n      name: name,\n      isCompleted: false,\n      tag_list: tagList,\n    };\n\n    addTodo(newTodo);\n  };\n\n  return (\n    <div>\n      <Form onSubmit={(e) => handleSubmit(e)}>\n        <FormGroup>\n          <Input\n            required\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Todo name\"\n            onChange={(e) => setName(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <FormGroup>\n          <Input\n            required\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Tags list\"\n            onChange={(e) => setTagList(e.target.value)}\n          ></Input>\n        </FormGroup>\n        <Button color=\"primary\" style={{ marginTop: \"2rem\" }} block>\n          Add todo\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/reportWebVitals.js",[],["50","51"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/index.js",[],["52","53"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/redux.js",[],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/components/Todo/TagsBar.js",["54","55"],"/Users/dhafinrazaq/Documents/DHAFIN/Self Learn/nodejs/cvwo/todo/todoapp/client/src/actions/todos.js",[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":5,"column":17,"nodeType":"58","messageId":"59","endLine":5,"endColumn":26},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"56","severity":1,"message":"65","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"66","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":21},{"ruleId":"61","replacedBy":"67"},{"ruleId":"63","replacedBy":"68"},{"ruleId":"61","replacedBy":"69"},{"ruleId":"63","replacedBy":"70"},{"ruleId":"56","severity":1,"message":"65","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":24,"column":6,"nodeType":"73","endLine":24,"endColumn":8,"suggestions":"74"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Component' is defined but never used.","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'useState' is defined but never used.","'useSelector' is defined but never used.",["75"],["76"],["75"],["76"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},"Update the dependencies array to be: [dispatch]",{"range":"80","text":"81"},[560,562],"[dispatch]"]